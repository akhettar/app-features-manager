// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/akhettar/app-features-manager/features (interfaces: UnleashService)

// Package mocks is a generated GoMock package.
package mocks

import (
	features "github.com/akhettar/app-features-manager/features"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockUnleashService is a mock of UnleashService interface
type MockUnleashService struct {
	ctrl     *gomock.Controller
	recorder *MockUnleashServiceMockRecorder
}

// MockUnleashServiceMockRecorder is the mock recorder for MockUnleashService
type MockUnleashServiceMockRecorder struct {
	mock *MockUnleashService
}

// NewMockUnleashService creates a new mock instance
func NewMockUnleashService(ctrl *gomock.Controller) *MockUnleashService {
	mock := &MockUnleashService{ctrl: ctrl}
	mock.recorder = &MockUnleashServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockUnleashService) EXPECT() *MockUnleashServiceMockRecorder {
	return m.recorder
}

// FetchFeatureFlags mocks base method
func (m *MockUnleashService) FetchFeatureFlags(arg0 string) features.Flags {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FetchFeatureFlags", arg0)
	ret0, _ := ret[0].(features.Flags)
	return ret0
}

// FetchFeatureFlags indicates an expected call of FetchFeatureFlags
func (mr *MockUnleashServiceMockRecorder) FetchFeatureFlags(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FetchFeatureFlags", reflect.TypeOf((*MockUnleashService)(nil).FetchFeatureFlags), arg0)
}
